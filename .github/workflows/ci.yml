#
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#

name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:

jobs:
  build_old:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
        # TODO: Get this working on windows-latest
        os: [ubuntu-latest]
    name: Build/Test (${{ matrix.os }}, Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Linux packages
        run: sudo apt-get -y install libssl-dev
        if: runner.os == 'Linux'
      - name: Install Mac packages
        run: brew install openssl
        if: runner.os == 'macOS'
      - name: Install Windows packages
        run: choco install openssl
        if: runner.os == 'Windows'
      - name: Build/Test root module
        run: |
          go build -v ./...
          go test -v ./...
      - name: Build/Test cmd module
        working-directory: ./cmd
        run: |
          go build -v ./...
          go test -v ./...

  build_new:
    strategy:
      matrix:
        go-version: [1.18.x]
        # TODO: Get this working on windows-latest
        os: [macos-latest, ubuntu-latest]
    name: Generate/Build/Test (${{ matrix.os }}, Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "3.19.1"
      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.27.1
      - name: Check Protobuf Generation
        run: |
          go generate ./... ./cmd/... ./launcher/...
          git diff -G'^[^/]' --exit-code
      - name: Install Linux packages
        run: sudo apt-get -y install libssl-dev
        if: runner.os == 'Linux'
      - name: Install Mac packages
        run: brew install openssl
        if: runner.os == 'macOS'
      - name: Install Windows packages
        run: choco install openssl
        if: runner.os == 'Windows'
      - name: Build all modules
        run: go build -v ./... ./cmd/... ./launcher/...
      - name: Test all modules
        run: go test -v ./... ./cmd/... ./launcher/...

  lint:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
        dir: ["./", "./cmd", "./launcher"]
    name: Lint ${{ matrix.dir }} (${{ matrix.os }}, Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          # Update when https://github.com/golangci/golangci-lint/issues/2997 is fixed.
          version: v1.46.2
          working-directory: ${{ matrix.dir }}
          args: >
            -D errcheck
            -E stylecheck
            -E goimports
            -E misspell
            -E revive
            -E gofmt
            -E goimports
            --exclude-use-default=false
            --max-same-issues=0
            --max-issues-per-linter=0
            --timeout=2m

  lintc:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    name: Lint CGO (${{ matrix.os }}, Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Linux packages
        run: sudo apt-get -y install libssl-dev
      - name: Check for CGO Warnings (gcc)
        run: CGO_CFLAGS=-Werror CC=gcc go build ./...
      - name: Check for CGO Warnings (clang)
        run: CGO_CFLAGS=-Werror CC=clang go build ./...
