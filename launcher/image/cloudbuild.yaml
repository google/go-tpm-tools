substitutions:
  '_BASE_IMAGE': ''
  '_OUTPUT_IMAGE_NAME': ''
  '_OUTPUT_IMAGE_FAMILY': ''
  '_BASE_IMAGE_PROJECT': 'cos-cloud'
  '_IMAGE_ENV': ''
  '_BUCKET_NAME': '${PROJECT_ID}_cloudbuild'
  '_CS_LICENSE': ''
  '_SHORT_SHA': ''

steps:
  - name: golang:1.21
    entrypoint: /bin/bash
    args:
      - -c
      - |
        cd launcher/launcher
        CGO_ENABLED=0 go build -o ../image/launcher -ldflags="-X 'main.BuildCommit=${_SHORT_SHA}'"
  - name: 'gcr.io/cloud-builders/gcloud'
    id: DownloadExpBinary
    entrypoint: 'gcloud'
    args: ['storage',
           'cp',
           'gs://confidential-space-images_third-party/confidential_space_experiments',
           './launcher/image/confidential_space_experiments']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['start-image-build',
           '-build-context=launcher/image',
           '-gcs-bucket=${_BUCKET_NAME}',
           '-gcs-workdir=customizer-${BUILD_ID}',
           '-image-name=${_BASE_IMAGE}',
           '-image-project=${_BASE_IMAGE_PROJECT}']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['run-script',
           '-script=preload.sh',
           '-env=IMAGE_ENV=${_IMAGE_ENV}']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['seal-oem']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['run-script',
           '-script=fixup_oem.sh']
  - name: 'gcr.io/cos-cloud/cos-customizer'
    args: ['finish-image-build',
           '-oem-size=500M',
           '-disk-size-gb=11',
           '-image-name=${_OUTPUT_IMAGE_NAME}',
           '-image-family=${_OUTPUT_IMAGE_FAMILY}',
           '-image-project=${PROJECT_ID}',
           '-licenses=${_CS_LICENSE}',
           '-licenses=projects/confidential-space-images/global/licenses/ek-certificate-license',
           '-zone=us-central1-a',
           '-project=${PROJECT_ID}']

timeout: '3000s'

options:
  dynamic_substitutions: true
